# Generated by Django 3.1.4 on 2021-11-27 20:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('agent_id', models.AutoField(primary_key=True, serialize=False)),
                ('organization_id', models.IntegerField()),
                ('agent_fio', models.CharField(max_length=255)),
                ('agent_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'agent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Agreement',
            fields=[
                ('agreement_id', models.AutoField(primary_key=True, serialize=False)),
                ('number_agreement', models.CharField(max_length=50)),
                ('date_agreement', models.DateTimeField()),
                ('numbers_tourist', models.IntegerField()),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
            ],
            options={
                'db_table': 'agreement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150, null=True)),
                ('last_name', models.CharField(max_length=150, null=True)),
                ('email', models.CharField(max_length=254, null=True)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CityInAgreement',
            fields=[
                ('city_in_agreement_id', models.IntegerField(primary_key=True, serialize=False)),
                ('agreement_id', models.IntegerField()),
            ],
            options={
                'db_table': 'city_in_agreement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=50)),
                ('client_fio', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=1)),
                ('date_birthday', models.DateField()),
                ('place_birthday', models.CharField(max_length=255)),
                ('passport_seria', models.CharField(max_length=2)),
                ('passport_number', models.CharField(max_length=8)),
                ('passport_date_issue', models.DateField()),
                ('passport_date_expiration', models.DateField()),
                ('passport_authority', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientStatus',
            fields=[
                ('client_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_status_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'client_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_number', models.CharField(max_length=50)),
                ('contract_date', models.DateTimeField()),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'contract',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('currency_code', models.IntegerField(primary_key=True, serialize=False)),
                ('currency_name', models.CharField(max_length=15)),
                ('course', models.FloatField()),
            ],
            options={
                'db_table': 'currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('hotel_id', models.AutoField(primary_key=True, serialize=False)),
                ('hotel_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('category', models.IntegerField()),
            ],
            options={
                'db_table': 'hotel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InterPassport',
            fields=[
                ('inter_passport_id', models.AutoField(primary_key=True, serialize=False)),
                ('inter_passport_seria', models.CharField(max_length=2)),
                ('inter_passport_number', models.CharField(max_length=7)),
                ('inter_passport_date_issue', models.DateField()),
                ('inter_passport_date_expiration', models.DateField()),
                ('inter_passport_authority', models.CharField(max_length=255)),
                ('citizenship', models.CharField(max_length=50)),
                ('state_code', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'inter_passport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('organization_id', models.AutoField(primary_key=True, serialize=False)),
                ('organization_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'organization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('passport_id', models.AutoField(primary_key=True, serialize=False)),
                ('passport_seria', models.CharField(max_length=2)),
                ('passport_number', models.CharField(max_length=8)),
                ('passport_date_issue', models.DateField()),
                ('passport_date_expiration', models.DateField()),
                ('passport_authority', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'passport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_number', models.CharField(max_length=50)),
                ('payment_date', models.DateTimeField()),
                ('amount', models.IntegerField()),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('position_id', models.AutoField(primary_key=True, serialize=False)),
                ('position_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('room_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_type_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'room_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('route_id', models.AutoField(primary_key=True, serialize=False)),
                ('check_in_date', models.DateTimeField()),
                ('departure_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'route',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RouteInContract',
            fields=[
                ('route_in_contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_id', models.IntegerField()),
            ],
            options={
                'db_table': 'route_in_contract',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('tour_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tour',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TouristInVoucher',
            fields=[
                ('tourist_in_voucher_id', models.AutoField(primary_key=True, serialize=False)),
                ('voucher_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tourist_in_voucher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('transport_id', models.AutoField(primary_key=True, serialize=False)),
                ('transport_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'transport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('voucher_id', models.AutoField(primary_key=True, serialize=False)),
                ('transfer', models.CharField(max_length=4)),
                ('food', models.CharField(max_length=11)),
            ],
            options={
                'db_table': 'voucher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('worker_id', models.AutoField(primary_key=True, serialize=False)),
                ('worker_name', models.CharField(max_length=50)),
                ('worker_fio', models.CharField(max_length=255)),
                ('date_birthday', models.DateField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'worker',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='application.worker')),
                ('login', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'account',
                'managed': False,
            },
        ),
    ]
